## Config section
conf:
  layoutName: page # Il nome del layout

  # Questa sezione definisce come laying genera gli elementi
  element:
    wrapper: true # (da implementare) Inserisce un contenitore esterno all'elemento da generare. N.B il nodo principale non viene mai wrappato
    inner: true # (da implementare) Inserisce un contenitore interno all'elemento da generare
    renderRegionFirst: true # Se items e region sono definiti sullo stesso livello, impostando "true" viene renderizzata prima la regione
    idAuto: true # Genera automaticamente l'id="elementID"
    classAuto: true # Genera automaticamente i nomi delle classi
    classAutoPrefix: element # Il prefisso delle classi in caso di "classAuto: true"
    defaultType: div # Se type non è definito di default verrà usato questo

  # Inserisce un blocco di dimensione fissa, utile in fase di sviluppo per visualizzare
  # la struttura della pagina senza contenuti generati dal CMS
  debugBlock: # (da implementare)
    active: false # se attivo o meno
    attributes: { class: well }


## Layout section
# Costruire un array ricorsivo come segue:
#
# elementID: # nome univoco a libera scelta
#   type: div|header|nav|footer|ecc|null # opzionale, se non definito viene impostato div
#   attributes: # opzionale, attributi html
#     id: custom|null # opzionale, se non definito o null ed è attivo idAuto: verrà usato elementID come id="elementID"
#     class: custom|null # opzionale, se attivo classAuto verranno aggiunte combinazioni di nomi dentro class=""
#     foo: bar # qualsiasi coppia attributo:valore
#   regions:
#     regionName # il nome della regione da posizionare
#     ... # list regions
#   items: # un array annidato con altri elementi
#
page: #elementID
  attributes: { class: page-default }

  items:
    slideshow: #elementID
      type: header
      regions:
        - '{{ page.slideshow }}' # posa della regione, in questo esempio ho usato la sintassi drupal8 twig, puoi anche inserire la sintassi drupal7 "<?php if (!empty($page['machine_name'])) print render($page['machine_name']); ?>" ma ormai è superata

    navbar: #elementID
      type: nav
      attributes: { class: nav }
      regions:
        - '{{ page.navbar }}' # posa della regione, in questo esempio ho usato la sintassi drupal8 twig

    preContent: #elementID
      attributes: { class: container }

      items:
        rowPreContent: #elementID
          attributes: { class: row }

          items:
            preContentFirst: #elementID
              attributes: { class: col-xs-12 col-md-6 }
              regions:
                - '{{ page.preContentFirst }}' # posa della regione

            preContentSecond: #elementID
              attributes: { class: col-xs-12 col-md-6 }
              regions:
                - '{{ page.preContentSecond }}' # posa della regione

    contentContainer: #elementID
      attributes: { class: container }

      items:
        rowContent: #elementID
          attributes: { class: row }

          items:
            content: #elementID
              type: content
              attributes: { class: col-xs-12 col-md-8 }
              regions:
                - '{{ page.breadcrumb }}' # posa della regione
                - '{{ page.help  }}' # posa della regione
                - '{{ page.content }}' # posa della regione

            sidebar: #elementID
              type: aside
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.sidebar }}' # posa della regione

    afterContent: #elementID
      attributes: { class: container }

      items:
        rowAfterContent: #elementID
          attributes: { class: row }

          items:
            afterContentFirst: #elementID
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.afterContentFirst }}' # posa della regione

            afterContentSecond: #elementID
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.afterContentSecond }}' # posa della regione

            afterContentThird: #elementID
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.afterContentThird }}' # posa della regione

    footer: #elementID
      type: footer
      attributes: { class: container }

      items:
        rowFooterFirst: #elementID
          attributes: { class: row }

          items:
            footerFirst: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerFirst }}' # posa della regione

            footerSecond: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerSecond }}' # posa della regione

            footerThird: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerThird }}' # posa della regione

            footerFourth: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerFourth }}' # posa della regione

        rowFooterSecond: #elementID
          attributes: { class: row }

          items:
            footerCopy: #elementID
              attributes: { class: col-xs-6 }
              regions:
                - '{{ page.footerCopy }}' # posa della regione

            footerCredits: #elementID
              attributes: { class: col-xs-6 }
              regions:
                - '{{ page.footerCredits }}' # posa della regione
