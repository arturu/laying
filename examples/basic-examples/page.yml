## Config section
conf:
  layoutName: "page" # Il nome del layout
  description: "Layout page" # La descrizione del tipo di layout

  # Questa sezione definisce come laying genera gli elementi
  element:
    defaultType: "div" # Se type non è definito di default verrà usato questo
    idAuto: true # Genera automaticamente l'attributo id=""
    classAuto: true # Genera automaticamente i nomi delle classi
    element: true # Contenitore delle regioni, si consiglia di lasciare sempre su true eccetto casi molto particolari
    elementPrefix: "" # Il prefisso delle classi e degli element id in caso di "classAuto: true" o "idAuto: true"
    elementSuffix: "" # Il suffisso delle classi e degli element id in caso di "classAuto: true" o "idAuto: true"
    wrapper: true # Inserisce un contenitore esterno all'elemento da generare.
    wrapperPrefix: "" # Il prefisso delle classi e degli id dei wrapper in caso di "classAuto: true" o "idAuto: true"
    wrapperSuffix: "-wrapper" # Il suffisso delle classi e degli id dei wrapper in caso di "classAuto: true" o "idAuto: true"
    inner: true # Inserisce un contenitore interno all'elemento da generare
    innerPrefix: "" # Il prefisso delle classi e degli id degli inner in caso di "classAuto: true" o "idAuto: true"
    innerSuffix: "-inner" # Il suffisso delle classi e degli id degli inner in caso di "classAuto: true" o "idAuto: true"
    renderRegionFirst: true # Se items e region sono definiti sullo stesso livello, impostando "true" viene renderizzata prima la regione
    regionClass: "region" # La classe che verrà impostata ad ogni regione
    regionSuffix: "-region-" # Inserisce un suffisso alla classe automatica

  # Inserisce un blocco di dimensione fissa, utile in fase di sviluppo per visualizzare
  # la struttura della pagina senza contenuti generati dal CMS
  debugBlock:
    active: true # se attivo o meno
    class: "-debugBlock debugBlock well"


## Layout section
# Costruire un array ricorsivo come segue:
#
# elementID: # nome univoco a libera scelta
#   type: div|header|nav|footer|ecc|null # opzionale, se non definito viene impostato div
#   implicit: true|false # opzionale, chiusura implicita di un elemento senza contenuto
#   attributes: # opzionale, attributi html
#     id: custom|null # opzionale, se non definito o null ed è attivo idAuto: verrà usato elementID come id="elementID"
#     class: custom|null # opzionale, se attivo classAuto verranno aggiunte combinazioni di nomi dentro class=""
#     foo: bar # qualsiasi coppia attributo:valore
#   regions:
#     - 'text' # testo da inserire
#     - { file: 'path/relative/file.ext', parseMode: 'yml|raw'} # è possibile caricare un file esterno
#     ... # list regions
#   items: # un array annidato con altri elementi
#
page: #elementID
  attributes: { class: page }

  items:
    slideshow: #elementID
      type: header
      regions:
        - '{{ page.slideshow }}'

    navbar: #elementID
      type: nav
      attributes: { class: nav }
      regions:
        - '{{ page.navbar }}' # posa della regione, in questo esempio ho usato la sintassi drupal8-bootstrap twig

    preContent: #elementID
      attributes: { class: container }

      items:
        rowPreContent: #elementID
          attributes: { class: row }

          items:
            preContentFirst: #elementID
              attributes: { class: col-xs-12 col-md-6 }
              regions:
                - '{{ page.preContentFirst }}' # posa della regione

            preContentSecond: #elementID
              attributes: { class: col-xs-12 col-md-6 }
              regions:
                - '{{ page.preContentSecond }}' # posa della regione

    contentContainer: #elementID
      attributes: { class: container }

      items:
        rowContent: #elementID
          attributes: { class: row }

          items:
            content: #elementID
              type: section
              attributes: { class: col-xs-12 col-md-8 }
              regions:
                - '{{ page.breadcrumb }}' # posa della regione
                - '{{ page.help  }}' # posa della regione
                - '{{ page.content }}' # posa della regione

            sidebar: #elementID
              type: aside
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.sidebar }}' # posa della regione

    afterContent: #elementID
      attributes: { class: container }

      items:
        rowAfterContent: #elementID
          attributes: { class: row }

          items:
            afterContentFirst: #elementID
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.afterContentFirst }}' # posa della regione

            afterContentSecond: #elementID
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.afterContentSecond }}' # posa della regione

            afterContentThird: #elementID
              attributes: { class: col-xs-12 col-md-4 }
              regions:
                - '{{ page.afterContentThird }}' # posa della regione

    footer: #elementID
      type: footer
      attributes: { class: container }

      items:
        rowFooterFirst: #elementID
          attributes: { class: row }

          items:
            footerFirst: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerFirst }}' # posa della regione

            footerSecond: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerSecond }}' # posa della regione

            footerThird: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerThird }}' # posa della regione

            footerFourth: #elementID
              attributes: { class: col-xs-12 col-md-3 }
              regions:
                - '{{ page.footerFourth }}' # posa della regione

        rowFooterSecond: #elementID
          attributes: { class: row }

          items:
            footerCopy: #elementID
              attributes: { class: col-xs-6 }
              regions:
                - '{{ page.footerCopy }}' # posa della regione

            footerCredits: #elementID
              attributes: { class: col-xs-6 }
              regions:
                - '{{ page.footerCredits }}' # posa della regione
                - { file: 'include.yml', parseMode: 'yml'} # è possibile caricare un file esterno
